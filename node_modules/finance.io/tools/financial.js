'use strict';

const request = require('request');

const getUrl = (symbol, extension) => {
    if (extension === undefined || extension === '') {
        extension = '';
    } else {
        extension = `.${extension}`;
    }
    let url = `https://query1.finance.yahoo.com/v7/finance/options/${symbol}${extension}`;
    return url;
};

const getJson = url =>
    new Promise((resolve, reject) => {
        let requestOpts = {
            url: url,
            json: true,
            headers: { 'User-agent': 'request' },
        };

        request.get(requestOpts, (err, res, data) => {
            if (err) {
                reject(err);
            } else if (res.statusCode !== 200) {
                reject(res.statusCode);
            } else {
                resolve(data);
            }
        });
    });

const financial = (symbol, extension) =>
    new Promise((resolve, reject) => {
        let url = getUrl(symbol, extension);
        getJson(url)
            .then(data => {
              const dt = data.optionChain.result[0].quote
                resolve({
                    symbol,
                    data: "financial",
                 fiftyTwoWeekRange: dt.fiftyTwoWeekRange, fiftyTwoWeekLow : dt.fiftyTwoWeekLow, fiftyTwoWeekHigh : dt.fiftyTwoWeekHigh, trailingPE : dt.trailingPE,   epsTrailingTwelveMonths : dt. epsTrailingTwelveMonths, epsForward : dt.epsForward, epsCurrentYear: dt.epsCurrentYear,  priceEpsCurrentYear : dt. priceEpsCurrentYear, sharesOutstanding : dt.sharesOutstanding,  bookValue : dt.bookValue, marketCap : dt.marketCap, forwardPE : dt.forwardPE, priceToBook : dt.priceToBook, fullExchangeName: dt.fullExchangeName,
                });
            })
            .catch(err => {
                reject(err);
            });
    });

module.exports = financial